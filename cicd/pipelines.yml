# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

parameters:
- name: name
  displayName: 'name:'
  type: string
  default: 'Mariusz'
- name: sessionId
  displayName:  'sessionId:'
  type: string
  default: '123456789'

jobs:
- job: 'DeploymentRequestProcess'
  displayName: 'Deployment Request Process'
  pool: server
  steps:
  - task: AzureFunction@1
    displayName: Deployment Request Process
    inputs:
      function: 'https://wvd-scale.azurewebsites.net/api/DeploymentRequestProcess'
      key: '$(functionKey)'
      method: 'POST'
      body: |
        {
        "name":"${{ parameters.name }}",
        "sessionId": "${{ parameters.sessionId }}",
        "wvdPool": "windows",
        "number": 100
        }
      waitForCompletion: 'false'
  # - task: AzureFunction@1
  #   displayName: Deployment Start Process
  #   inputs:
  #     function: 'https://wvd-scale.azurewebsites.net/api/DeplymentStartProcess'
  #     key: '$(functionKey2)'
  #     method: 'POST'
  #     body: |
  #       {
  #       "sessionId": "${{ parameters.sessionId }}"
  #       }
  #     waitForCompletion: 'false'
- job: 'DeploymentStartProcess'
  displayName: 'Deployment Start Process'
  steps:
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        # Write your PowerShell commands here.
        $url = "https://wvd-scale.azurewebsites.net/api/DeplymentStartProcess?code=$(functionKey2)"
        $url2 = "http://numbersapi.com/random?min=10&max=20"
        # Write-Host "Hello World ${{ parameters.sessionId }}"
        Invoke-RestMethod $url2